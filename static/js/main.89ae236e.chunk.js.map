{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","value","target","onSelect","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","list","length","map","expense","id","ChartBar","fillBar","max","Math","round","style","height","label","Chart","values","dataPoints","dataPoint","maxValue","ExpensesChart","expenses","getMonth","Expenses","useState","filterYear","setFilter","filteredExpenses","filter","toString","selectedYear","ExpenseForm","inputText","setInputText","changeHandler","name","prevValue","onSubmit","preventDefault","newExpenseData","Date","onSaved","isCancelled","type","min","step","onClick","NewExpense","isEditing","setIsEditing","getExpenseData","random","onAddNewExpense","App","expenseArr","setExpenseArr","newObject","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89ae236e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  function changeHandler(event) {\n    const {value} = event.target;\n    props.onSelect(value);\n  }\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select onChange={changeHandler} value={props.selected}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString('en-US',{month: 'long'});\r\n    const day = props.date.toLocaleString('en-US',{day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n    return <div className='expense-date'>\r\n    <div className='expense-date__month'>{month}</div>\r\n    <div className='expense-date__year'>{year}</div>\r\n    <div className='expense-date__day'>{day}</div>\r\n</div>\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\n\r\nfunction ExpenseItem(props) {\r\n   \r\n    return <li>\r\n        <Card className='expense-item'>\r\n            <ExpenseDate \r\n                date={props.date}\r\n            />\r\n            <div className='expense-item__description'>\r\n                <h2>{props.title}</h2>\r\n                <div className='expense-item__price'>â‚¹ {props.amount}</div>\r\n            </div>\r\n        </Card>\r\n    </li>\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\n\r\nfunction ExpensesList(props) {\r\n    if(props.list.length === 0) {\r\n      return <h2 className='expenses-list__fallback'>Found No Expenses!</h2>\r\n    }\r\n    return <ul className='expenses-list'>\r\n        {props.list.map(expense => {\r\n        return <ExpenseItem\r\n        key= {expense.id}\r\n        title= {expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n        />\r\n      })}\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList;","import './ChartBar.css';\r\n\r\nfunction ChartBar(props) {\r\n    let fillBar = '0%';\r\n    if(props.max>0){\r\n        fillBar = Math.round((props.value/props.max)*100)+'%';\r\n    }\r\n    return <div className='chart-bar'>\r\n        <div className='chart-bar__inner'>\r\n            <div className='chart-bar__fill' style={{height:fillBar}} ></div>\r\n        </div>\r\n        <div className='chart-bar__label'>{props.label}</div>      \r\n    </div>\r\n}\r\n\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\r\nimport './Chart.css';\r\n\r\nfunction Chart (props) {\r\n    const values = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const maxValue = Math.max(...values);\r\n    return <div className='chart'>\r\n        {props.dataPoints.map(dataPoint => \r\n            {return <ChartBar \r\n                key={dataPoint.label}\r\n                value={dataPoint.value}\r\n                max={maxValue}\r\n                label={dataPoint.label}\r\n            />}\r\n        )}   \r\n    </div>\r\n}\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props) {\r\n    const dataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0}\r\n    ]\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        dataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return <Chart dataPoints={dataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;","import React, {useState} from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\n\r\n\r\nfunction Expenses(props) {\r\n    const [filterYear, setFilter] = useState('2021');\r\n    function selectHandler(selectedYear) {\r\n      setFilter(selectedYear);\r\n    }\r\n    const filteredExpenses = props.expenses.filter(expense => {\r\n      return expense.date.getFullYear().toString() === filterYear;\r\n    });    \r\n\r\n    return <div><Card className='expenses'>\r\n    <ExpensesFilter onSelect={selectHandler} selected={filterYear} />\r\n    <ExpensesChart expenses={filteredExpenses} />\r\n    <ExpensesList list={filteredExpenses}/>\r\n    </Card>\r\n    </div>\r\n}\r\n\r\nexport default Expenses;","import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm(props) {\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\",\r\n        amount: \"\",\r\n        date: \"\"\r\n    });\r\n\r\n    function changeHandler(event) {\r\n        const {value,name} = event.target;\r\n        setInputText((prevValue) => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault();\r\n        const newExpenseData = {\r\n            title: inputText.title,\r\n            amount: +inputText.amount,\r\n            date: new Date(inputText.date)\r\n        };\r\n        props.onSaved(newExpenseData);\r\n        setInputText({\r\n            title:\"\",\r\n            amount:\"\",\r\n            date:\"\"\r\n        }); \r\n        props.isCancelled();       \r\n    }\r\n    \r\n\r\n    return <form onSubmit={submitHandler}>\r\n    <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n            <label>Title</label>\r\n            <input onChange={changeHandler} type='text' name='title' value={inputText.title} />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n            <label>Amount</label>\r\n            <input onChange={changeHandler} type='number' min='0.01' step='0.01' name='amount' value={inputText.amount} />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n            <label>Date</label>\r\n            <input onChange={changeHandler} type='date' min='2019-01-01' max='2022-12-31' name='date' value={inputText.date} />\r\n        </div>\r\n    </div>\r\n    \r\n    <div className='new-expense__actions'>\r\n        <button onClick={props.isCancelled}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n    </div>\r\n    </form>\r\n}\r\n\r\nexport default ExpenseForm;","import React, {useState} from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nfunction NewExpense(props) {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    function clickHandler() {\r\n        setIsEditing(true)\r\n    }\r\n\r\n    function cancelHandler() {\r\n        setIsEditing(false)\r\n    }\r\n\r\n    function saveHandler(getExpenseData) {\r\n        const newExpenseData = {\r\n            ...getExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onAddNewExpense(newExpenseData);\r\n    }\r\n\r\n    return <div className='new-expense'>\r\n       {!isEditing && <button onClick={clickHandler} >Add New Expense</button>}\r\n        {isEditing && <ExpenseForm onSaved={saveHandler} isCancelled={cancelHandler} />}\r\n    </div>\r\n}\r\n\r\nexport default NewExpense;","import { useState } from 'react';\nimport Expenses from './Expenses/Expenses'\nimport NewExpense from './NewExpense/NewExpense';\n\nfunction App() {\n  \n  const expenses = [\n    {\n      id: '0',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: '1', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: '2',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: '3',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n  const [ expenseArr, setExpenseArr] = useState(expenses);\n  function addExpenseHandler(newObject) {\n    setExpenseArr((prevExpenses) =>\n     { return [ newObject,...prevExpenses];});\n  }\n\n  return (\n    <div>\n      <NewExpense onAddNewExpense={addExpenseHandler} />\n      <Expenses\n        expenses={expenseArr}\n      />     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}